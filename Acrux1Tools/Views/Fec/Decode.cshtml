@model Acrux1Tools.Web.Models.Fec.DecodeViewModel

@{
    ViewData["Title"] = "Decode";
}

<h1>Decode</h1>
<h2>Reed solomon 255, 223 decode</h2>

<form asp-action="Decode">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="HexPayloadOriginal" class="control-label"></label>
        <textarea asp-for="HexPayloadOriginal" class="form-control"></textarea>
        <span asp-validation-for="HexPayloadOriginal" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PreambleLength" class="control-label"></label>
        <input asp-for="PreambleLength" class="form-control" />
        <span asp-validation-for="PreambleLength" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="VirtualFillLength" class="control-label"></label>
        <input asp-for="VirtualFillLength" class="form-control" />
        <span asp-validation-for="VirtualFillLength" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DualBasis" class="control-label"></label>
        <input asp-for="DualBasis" class="form-control" />
        <span asp-validation-for="DualBasis" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Decode" class="btn btn-primary" />
    </div>
</form>

<div>
    <h4>Result:</h4>
    <hr />
    <dl class="dl-horizontal">
        @if (Model.Error != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Error)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Error)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.ErrorsCorrectedCount)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ErrorsCorrectedCount)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PayloadUncorrected)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PayloadUncorrected, null, null, new { compareArray = Model.PayloadCorrected, defaultStyleClass = "text-body", diffStyleClass = "text-white bg-danger" })
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PayloadCorrected)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PayloadCorrected, null, null, new { compareArray = Model.PayloadUncorrected, defaultStyleClass = "text-body", diffStyleClass = "text-white bg-success" })
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BlockUncorrected)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BlockUncorrected, null, null, new { compareArray = Model.BlockCorrected, defaultStyleClass = "text-body", diffStyleClass = "text-white bg-danger" })
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BlockCorrected)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BlockCorrected, null, null, new { compareArray = Model.BlockUncorrected, defaultStyleClass = "text-body", diffStyleClass = "text-white bg-success" })
        </dd>
    </dl>
</div>
